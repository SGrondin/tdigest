# "Asemio Style" v1.2
# Last updated for ocamlformat 0.21.0

# All available options are listed.
# An option is commented out when the value matches the default
# When updating ocamlformat, update this file:
# - add any new options
# - try out new values for existing options
# - if a default changed, see if we should follow it or not

# assignment-operator = end-line
break-cases = all
# break-fun-decl = wrap
# break-fun-sig = wrap
break-infix = fit-or-vertical
# break-infix-before-func = false
# break-separators = after
# break-sequences = true
cases-exp-indent = 2
# cases-matching-exp-indent = normal
doc-comments = before
# doc-comments-padding = 2
# doc-comments-tag-only = default
# dock-collection-brackets = true
exp-grouping = preserve
field-space = tight-decl
if-then-else = keyword-first
# indicate-multiline-delimiters = no
indicate-nested-or-patterns = space
# infix-precedence = indent
# leading-nested-match-parens = false
let-and = sparse
# let-binding-spacing = compact
# let-module = compact
line-endings = lf
margin = 106
max-indent = 3
module-item-spacing = sparse
parens-ite = true
parens-tuple = multi-line-only
# parse-docstrings = false
# sequence-blank-line = preserve-one
# sequence-style = terminator
single-case = sparse
# space-around-arrays = true
# space-around-lists = true
# space-around-records = true
# space-around-variants = true
type-decl = sparse
# wrap-comments = false
# wrap-fun-args = true


# DEPRECATED

# align-cases = false
align-constructors-decl = true
align-variants-decl = true
# break-before-in = fit-or-vertical
# break-collection-expressions = fit-or-vertical
# break-string-literals = auto
# break-struct = force
disambiguate-non-breaking-match = true
# extension-indent = 2
function-indent = 0
# function-indent-nested = never
# indent-after-in = 0
# let-binding-indent = 2
# match-indent = 0
# match-indent-nested = never
# nested-match = wrap
# parens-tuple-patterns = multi-line-only
# stritem-extension-indent = 0
# type-decl-indent = 2
